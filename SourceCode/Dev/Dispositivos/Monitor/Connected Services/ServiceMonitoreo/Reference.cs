//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Monitor.ServiceMonitoreo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Foundation.Stone.Application.Wrapper")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Monitor.ServiceMonitoreo.ResponseQueryOfPublisherDTO2XnGHQYa))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Monitor.ServiceMonitoreo.ResponseObjectOfstring))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Monitor.ServiceMonitoreo.ResponseType StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeBase {
            get {
                return this.CodeBaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeBaseField, value) != true)) {
                    this.CodeBaseField = value;
                    this.RaisePropertyChanged("CodeBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Monitor.ServiceMonitoreo.ResponseType State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseQueryOfPublisherDTO2XnGHQYa", Namespace="http://schemas.datacontract.org/2004/07/Foundation.Stone.Application.Wrapper")]
    [System.SerializableAttribute()]
    public partial class ResponseQueryOfPublisherDTO2XnGHQYa : Monitor.ServiceMonitoreo.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Monitor.ServiceMonitoreo.PublisherDTO[] ListEntitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Monitor.ServiceMonitoreo.PublisherDTO[] ListEntities {
            get {
                return this.ListEntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ListEntitiesField, value) != true)) {
                    this.ListEntitiesField = value;
                    this.RaisePropertyChanged("ListEntities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseObjectOfstring", Namespace="http://schemas.datacontract.org/2004/07/Foundation.Stone.Application.Wrapper")]
    [System.SerializableAttribute()]
    public partial class ResponseObjectOfstring : Monitor.ServiceMonitoreo.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseType", Namespace="http://schemas.datacontract.org/2004/07/Foundation.Stone.Application.Wrapper")]
    public enum ResponseType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoData = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherDTO", Namespace="http://schemas.datacontract.org/2004/07/ServiceMonitoreo.Contract")]
    [System.SerializableAttribute()]
    public partial class PublisherDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentificadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPublisher {
            get {
                return this.IdPublisherField;
            }
            set {
                if ((this.IdPublisherField.Equals(value) != true)) {
                    this.IdPublisherField = value;
                    this.RaisePropertyChanged("IdPublisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identificador {
            get {
                return this.IdentificadorField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificadorField, value) != true)) {
                    this.IdentificadorField = value;
                    this.RaisePropertyChanged("Identificador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMonitoreo.IHandlerMonitoreo")]
    public interface IHandlerMonitoreo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetStateFingerPrint", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetStateFingerPrintResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring GetStateFingerPrint(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetStateFingerPrint", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetStateFingerPrintResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetStateFingerPrintAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetStateCardReader", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetStateCardReaderResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring GetStateCardReader(string IP, string typeCardReader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetStateCardReader", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetStateCardReaderResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetStateCardReaderAsync(string IP, string typeCardReader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetPunblisherByIdentifier", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetPunblisherByIdentifierResponse")]
        Monitor.ServiceMonitoreo.ResponseQueryOfPublisherDTO2XnGHQYa GetPunblisherByIdentifier(string pIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetPunblisherByIdentifier", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetPunblisherByIdentifierResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseQueryOfPublisherDTO2XnGHQYa> GetPunblisherByIdentifierAsync(string pIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetReaderCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetReaderCardResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring GetReaderCard(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/GetReaderCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/GetReaderCardResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetReaderCardAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/Reset", ReplyAction="http://tempuri.org/IHandlerMonitoreo/ResetResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring Reset(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/Reset", ReplyAction="http://tempuri.org/IHandlerMonitoreo/ResetResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> ResetAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/ReadCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/ReadCardResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring ReadCard(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/ReadCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/ReadCardResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> ReadCardAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/EjectCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/EjectCardResponse")]
        Monitor.ServiceMonitoreo.ResponseObjectOfstring EjectCard(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandlerMonitoreo/EjectCard", ReplyAction="http://tempuri.org/IHandlerMonitoreo/EjectCardResponse")]
        System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> EjectCardAsync(string IP);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHandlerMonitoreoChannel : Monitor.ServiceMonitoreo.IHandlerMonitoreo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandlerMonitoreoClient : System.ServiceModel.ClientBase<Monitor.ServiceMonitoreo.IHandlerMonitoreo>, Monitor.ServiceMonitoreo.IHandlerMonitoreo {
        
        public HandlerMonitoreoClient() {
        }
        
        public HandlerMonitoreoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HandlerMonitoreoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HandlerMonitoreoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HandlerMonitoreoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring GetStateFingerPrint(string IP) {
            return base.Channel.GetStateFingerPrint(IP);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetStateFingerPrintAsync(string IP) {
            return base.Channel.GetStateFingerPrintAsync(IP);
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring GetStateCardReader(string IP, string typeCardReader) {
            return base.Channel.GetStateCardReader(IP, typeCardReader);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetStateCardReaderAsync(string IP, string typeCardReader) {
            return base.Channel.GetStateCardReaderAsync(IP, typeCardReader);
        }
        
        public Monitor.ServiceMonitoreo.ResponseQueryOfPublisherDTO2XnGHQYa GetPunblisherByIdentifier(string pIdentifier) {
            return base.Channel.GetPunblisherByIdentifier(pIdentifier);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseQueryOfPublisherDTO2XnGHQYa> GetPunblisherByIdentifierAsync(string pIdentifier) {
            return base.Channel.GetPunblisherByIdentifierAsync(pIdentifier);
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring GetReaderCard(string IP) {
            return base.Channel.GetReaderCard(IP);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> GetReaderCardAsync(string IP) {
            return base.Channel.GetReaderCardAsync(IP);
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring Reset(string IP) {
            return base.Channel.Reset(IP);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> ResetAsync(string IP) {
            return base.Channel.ResetAsync(IP);
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring ReadCard(string IP) {
            return base.Channel.ReadCard(IP);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> ReadCardAsync(string IP) {
            return base.Channel.ReadCardAsync(IP);
        }
        
        public Monitor.ServiceMonitoreo.ResponseObjectOfstring EjectCard(string IP) {
            return base.Channel.EjectCard(IP);
        }
        
        public System.Threading.Tasks.Task<Monitor.ServiceMonitoreo.ResponseObjectOfstring> EjectCardAsync(string IP) {
            return base.Channel.EjectCardAsync(IP);
        }
    }
}
