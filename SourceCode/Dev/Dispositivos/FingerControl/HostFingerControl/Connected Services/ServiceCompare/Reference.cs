//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HostFingerControl.ServiceCompare {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerprintDTO", Namespace="http://schemas.datacontract.org/2004/07/Prodem.Microfinanzas.CommonEntities.Commo" +
        "n")]
    [System.SerializableAttribute()]
    public partial class FingerprintDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FingerIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HostFingerControl.ServiceCompare.FingerprintFormat FingerprintFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FingerprintProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FingerprintSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingerprintStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ObjFingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HostFingerControl.ServiceCompare.Origin OriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FingerIdentifier {
            get {
                return this.FingerIdentifierField;
            }
            set {
                if ((this.FingerIdentifierField.Equals(value) != true)) {
                    this.FingerIdentifierField = value;
                    this.RaisePropertyChanged("FingerIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HostFingerControl.ServiceCompare.FingerprintFormat FingerprintFormat {
            get {
                return this.FingerprintFormatField;
            }
            set {
                if ((this.FingerprintFormatField.Equals(value) != true)) {
                    this.FingerprintFormatField = value;
                    this.RaisePropertyChanged("FingerprintFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FingerprintProcess {
            get {
                return this.FingerprintProcessField;
            }
            set {
                if ((this.FingerprintProcessField.Equals(value) != true)) {
                    this.FingerprintProcessField = value;
                    this.RaisePropertyChanged("FingerprintProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FingerprintSize {
            get {
                return this.FingerprintSizeField;
            }
            set {
                if ((this.FingerprintSizeField.Equals(value) != true)) {
                    this.FingerprintSizeField = value;
                    this.RaisePropertyChanged("FingerprintSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingerprintStatus {
            get {
                return this.FingerprintStatusField;
            }
            set {
                if ((this.FingerprintStatusField.Equals(value) != true)) {
                    this.FingerprintStatusField = value;
                    this.RaisePropertyChanged("FingerprintStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ObjFingerprint {
            get {
                return this.ObjFingerprintField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjFingerprintField, value) != true)) {
                    this.ObjFingerprintField = value;
                    this.RaisePropertyChanged("ObjFingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HostFingerControl.ServiceCompare.Origin Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((this.OriginField.Equals(value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerprintFormat", Namespace="http://schemas.datacontract.org/2004/07/Prodem.Microfinanzas.CommonEntities.Commo" +
        "n")]
    public enum FingerprintFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Old = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DP = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISO = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Origin", Namespace="http://schemas.datacontract.org/2004/07/Prodem.Microfinanzas.CommonEntities.Commo" +
        "n")]
    public enum Origin : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAI = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAI10 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFNET = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerValidationResult", Namespace="http://schemas.datacontract.org/2004/07/Prodem.Microfinanzas.CommonEntities.Commo" +
        "n")]
    [System.SerializableAttribute()]
    public partial class FingerValidationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FingerMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FingerOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HostFingerControl.ServiceCompare.FingerprintValidationResult ResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FingerMatch {
            get {
                return this.FingerMatchField;
            }
            set {
                if ((this.FingerMatchField.Equals(value) != true)) {
                    this.FingerMatchField = value;
                    this.RaisePropertyChanged("FingerMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FingerOrigin {
            get {
                return this.FingerOriginField;
            }
            set {
                if ((this.FingerOriginField.Equals(value) != true)) {
                    this.FingerOriginField = value;
                    this.RaisePropertyChanged("FingerOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseMessage {
            get {
                return this.ResponseMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseMessageField, value) != true)) {
                    this.ResponseMessageField = value;
                    this.RaisePropertyChanged("ResponseMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HostFingerControl.ServiceCompare.FingerprintValidationResult ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerprintValidationResult", Namespace="http://schemas.datacontract.org/2004/07/Prodem.Microfinanzas.CommonEntities.Commo" +
        "n")]
    public enum FingerprintValidationResult : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotMigrate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRealize = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCompare.IFingerprintCompService")]
    public interface IFingerprintCompService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintCompService/FingerprintComparerValidation", ReplyAction="http://tempuri.org/IFingerprintCompService/FingerprintComparerValidationResponse")]
        HostFingerControl.ServiceCompare.FingerValidationResult FingerprintComparerValidation(HostFingerControl.ServiceCompare.FingerprintDTO fingerOrigin, HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerprintsToCompare, bool migrateFingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFingerprintCompService/FingerprintComparerValidationOneToOne", ReplyAction="http://tempuri.org/IFingerprintCompService/FingerprintComparerValidationOneToOneR" +
            "esponse")]
        HostFingerControl.ServiceCompare.FingerValidationResult[] FingerprintComparerValidationOneToOne(HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerOrigin, HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerprintsToCompare, bool migrateFingerprints);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFingerprintCompServiceChannel : HostFingerControl.ServiceCompare.IFingerprintCompService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FingerprintCompServiceClient : System.ServiceModel.ClientBase<HostFingerControl.ServiceCompare.IFingerprintCompService>, HostFingerControl.ServiceCompare.IFingerprintCompService {
        
        public FingerprintCompServiceClient() {
        }
        
        public FingerprintCompServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FingerprintCompServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerprintCompServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerprintCompServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HostFingerControl.ServiceCompare.FingerValidationResult FingerprintComparerValidation(HostFingerControl.ServiceCompare.FingerprintDTO fingerOrigin, HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerprintsToCompare, bool migrateFingerprints) {
            return base.Channel.FingerprintComparerValidation(fingerOrigin, colFingerprintsToCompare, migrateFingerprints);
        }
        
        public HostFingerControl.ServiceCompare.FingerValidationResult[] FingerprintComparerValidationOneToOne(HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerOrigin, HostFingerControl.ServiceCompare.FingerprintDTO[] colFingerprintsToCompare, bool migrateFingerprints) {
            return base.Channel.FingerprintComparerValidationOneToOne(colFingerOrigin, colFingerprintsToCompare, migrateFingerprints);
        }
    }
}
