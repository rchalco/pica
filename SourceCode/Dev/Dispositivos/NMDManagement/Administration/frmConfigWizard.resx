<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Sequence.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CurrencyCourt.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MinQuantity.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TotalQuantity.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="wizardControl1.TitleIcon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAABAQEAABAAQAKAEAAB4DAAAwMAAAAQAIAKgOAABGBAAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAIAAAAAAAAAAAAAIiHgAcAAAAAAAAAAIAAh3AAAAB3AAAAAAAA
        AAByUgAAAAAAdwAHAAAAAAAAhQAAAAAAAAh3cAAAAAAAAId3iIiIhyAAdwAAAAAAAAgAAHAAAAAIAABw
        AAAAAABwAAcAAAAAAIAAAAAAAIgIAABwAAAAAAAHAAgAAAgAeAAHAAAAAAAACAAIAACAAAcACAAAAAAA
        AABwB4gAhQAHcHAAAAAAAAAAcHcHgAcAJwBwAAAAAAAAAICAAAAAeIUAcAAAAAAAAAAIcHAAAABwAHgA
        AAAAAAAABwCAAAAAgAAAAAAAAAAAAIUAAAAAAAcABwAAAAAAAABwBwAAAAAIAAAAAAAAAAAIAAcAAAAA
        AHAAcAAAAAAABwAIAAAAAAAHAAgAAAAAAHAAcAAAAAAAAHAHh4AAAIcAAIAAAAAAAACHAIAAd3AAAAcA
        AAAAAAAAAHB3AAAAAAAIAAAAAAAAAACHBwAAAIh4gAAAAAAAAAAACAiHIAdwBwAAAAAAAAAAAABwAAgH
        AAAAAAAAAAAAAAAAAAAABwAAAAAAAAAAAAAAAAAAAAgABwAAAAAAAAAAAAAAAAAAh4gAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////D///Bg//cAAP/wAAD/8AAB//AAA//gf4H/wP/B/IH/4PgD/+DwA/
        /wMAf/8BgH//B8B//4fwP/+H8H//D/g//w/4P/4P/B/+D/4P/B//AfAf/wAAP//AAD//wAB//+AA///3
        oP///+D////g////8P//////KAAAABAAAAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wAAAAAAAAgAAAAAAACICAeAAAB4cAAHAAAAAHB3dQJwAAAHAACAAAcAB4AAAAAABwBwAIAAAAAHcIdw
        gAAAAICAAHBwAAAAgAAAgAAAAAAAAAAHBwAABwgAAABwd4gAAAAAAAdwAHeAAAAACHh3AAAAAAAAAAgA
        AAAAAAAAAIAAAP/vAAD/IQAA8AMAAPAHAADjYwAAh/MAAAfxAAAH8QAAx/MAAMfzAADj4wAA8AcAAPgH
        AAD4DwAA/48AAP/fAAAoAAAAMAAAAGAAAAABAAgAAAAAAAAJAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAE
        AAAICAgACAwIABAQEAAQFBAAGBgYABgcGAAhICEAISQhACkoKQApLCkAMTAxADE0MQA5ODkAOTw5AEJB
        QgBCRUIASklKAEpNSgBSUVIAUlVSAFpZWgBaXVoAY2FjAGNlYwBraWsAa21rAHNxcwBzdXMAe3l7AHt9
        ewCEgoQAhIaEAIyKjACMjowAlJKUAJSWlACcmpwAnJ6cAKWipQClpqUAraqtAK2urQC1srUAtba1AL26
        vQC9vr0AxsPGAMbHxgDOy84Azs/OANbT1gDW19YA3tveAN7f3gDn4+cA5+fnAO/r7wDv7+8A9/P3APf3
        9wD/+/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwN
        BQ4nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAAAAAAIwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAPTUrIx4bGyArOgAACgAAAAAACT0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA9MSARBQAAAAAAAAAAAys5AwAAAAAABToAAAAAAAAAAAAAAAAAAAAAAB4lOQA5JxUGAAAAAAAA
        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
        AAAABQAAAAAAADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAAABwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAMAAAADKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEXDRczAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////wAA////////AAD///////8AAP/////wfwAA/////+A/
        AAD///4AYB8AAP//4AAAHwAA//EAAAAfAAD/8AAAAD8AAP/wAAAAfwAA//gAAAH/AAD/8A/wAP8AAP/g
        D/4A/wAA/8Af/4B/AAD/gD//wH8AAP8Af//AfwAAwAD//+B/AACAAf//4D8AAIAB///wPwAAgAP///AD
        AACAA///8AMAAIAH///wDwAAwAf///gPAADgB///+B8AAPwD///8HwAA/gP///gfAAD+A///+B8AAP4B
        ///wPwAA/wH///A/AAD/AP//4D8AAP+A///AfwAA/8B//8B/AAD/wH//gH8AAP/gB/4A/wAA//AAOAD/
        AAD/+AAAAf8AAP/8AAAD/wAA//4AAAP/AAD//wAAD/8AAP//gAAP/wAA//+PAA//AAD//5/4B/8AAP//
        3/gH/wAA////+A//AAD////4D/8AAP////wf/wAA////////AAD///////8AAA==
</value>
  </data>
</root>